version: '3.8'

services:
  db:
    image: postgres:16.1
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-shareit}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data  # Том для хранения данных PostgreSQL
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-shareit}"]
      timeout: 5s
      interval: 5s
      retries: 10

  db-init:
    image: postgres:16.1
    container_name: db-init
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-shareit}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    entrypoint:
      - bash
      - -c
      - |
        set -e
        until psql postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-shareit} -c '\q'; do
          echo "Postgres is unavailable - sleeping"
          sleep 1
        done
        echo "Postgres is up - executing command"
        psql postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-shareit} -v ON_ERROR_STOP=1 <<-EOSQL
        CREATE TABLE IF NOT EXISTS users (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          name VARCHAR(255) NOT NULL,
          login VARCHAR(100),
          email VARCHAR(512) NOT NULL,
          CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
        );
        CREATE TABLE IF NOT EXISTS requests (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          description VARCHAR(250),
          requester_id BIGINT REFERENCES users (id),
          create_date TIMESTAMP WITHOUT TIME ZONE NOT NULL
        );
        CREATE TABLE IF NOT EXISTS items (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          owner_id BIGINT NOT NULL REFERENCES users (id),
          been_on_loan INTEGER,
          name VARCHAR(100) NOT NULL,
          description VARCHAR(300) NOT NULL,
          available BOOLEAN,
          request_id BIGINT REFERENCES requests (id)
        );
        CREATE TABLE IF NOT EXISTS booking (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          booker BIGINT NOT NULL REFERENCES users(id),
          item BIGINT NOT NULL REFERENCES items(id),
          start_time TIMESTAMP NOT NULL,
          end_time TIMESTAMP NOT NULL,
          status VARCHAR(100) NOT NULL
        );
        CREATE TABLE IF NOT EXISTS comments (
          id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
          user_id BIGINT NOT NULL REFERENCES users(id),
          item_id BIGINT NOT NULL REFERENCES items(id),
          text VARCHAR(500) NOT NULL,
          create_date_time TIMESTAMP NOT NULL
        );
        EOSQL